{"ast":null,"code":"var _jsxFileName = \"/Users/pranavreddy/Desktop/notify /user/src/components/TaskPage.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n\n// function TasksPage() {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState('');\n\n//   const handleNewTaskChange = (event) => {\n//     setNewTask(event.target.value);\n//   };\n\n//   const handleAddTask = () => {\n//     if (newTask.trim() !== '') {\n//       const newTaskObj = {\n//         id: Date.now(),\n//         title: newTask,\n//       };\n//       setTasks([...tasks, newTaskObj]);\n//       setNewTask('');\n//     }\n//   };\n\n//   const handleDeleteTask = (taskId) => {\n//     const updatedTasks = tasks.filter((task) => task.id !== taskId);\n//     setTasks(updatedTasks);\n//   };\n\n//   return (\n//     <div className=\"tasks-page\">\n//       <h1 className=\"taskh1\">Tasks Page</h1>\n//       <div className=\"add-task\">\n//         <input\n//           type=\"text\"\n//           value={newTask}\n//           onChange={handleNewTaskChange}\n//           placeholder=\"Enter task\"\n//         />\n//         <button onClick={handleAddTask}>Add Task</button>\n//       </div>\n//       <ul className=\"task-list\">\n//         {tasks.map((task) => (\n//           <li key={task.id} className=\"task-item\">\n//             {task.title}\n//             <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default TasksPage;\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksPage() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [timers, setTimers] = useState({});\n  const handleNewTaskChange = event => {\n    setNewTask(event.target.value);\n  };\n  const handleAddTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: Date.now(),\n        title: newTask,\n        time: 10 // Default time in seconds\n      };\n\n      setTasks([...tasks, newTaskObj]);\n      setTimers(prevTimers => ({\n        ...prevTimers,\n        [newTaskObj.id]: newTaskObj.time\n      }));\n      setNewTask('');\n    }\n  };\n  const handleDeleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    const updatedTimers = {\n      ...timers\n    };\n    delete updatedTimers[taskId];\n    setTasks(updatedTasks);\n    setTimers(updatedTimers);\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimers(prevTimers => {\n        const updatedTimers = {\n          ...prevTimers\n        };\n        Object.keys(updatedTimers).forEach(taskId => {\n          updatedTimers[taskId] -= 1;\n          if (updatedTimers[taskId] === 0) {\n            delete updatedTimers[taskId];\n            // Add your logic here for handling task completion\n          }\n        });\n\n        return updatedTimers;\n      });\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: handleNewTaskChange,\n        placeholder: \"Enter task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [timers[task.id], \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksPage, \"ygbuBKnq0JfQnoYEZeEwNLxer/U=\");\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TasksPage","_s","tasks","setTasks","newTask","setNewTask","timers","setTimers","handleNewTaskChange","event","target","value","handleAddTask","trim","newTaskObj","id","Date","now","title","time","prevTimers","handleDeleteTask","taskId","updatedTasks","filter","task","updatedTimers","interval","setInterval","Object","keys","forEach","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/Users/pranavreddy/Desktop/notify /user/src/components/TaskPage.jsx"],"sourcesContent":["// import { useState } from 'react';\n\n// function TasksPage() {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState('');\n\n//   const handleNewTaskChange = (event) => {\n//     setNewTask(event.target.value);\n//   };\n\n//   const handleAddTask = () => {\n//     if (newTask.trim() !== '') {\n//       const newTaskObj = {\n//         id: Date.now(),\n//         title: newTask,\n//       };\n//       setTasks([...tasks, newTaskObj]);\n//       setNewTask('');\n//     }\n//   };\n\n//   const handleDeleteTask = (taskId) => {\n//     const updatedTasks = tasks.filter((task) => task.id !== taskId);\n//     setTasks(updatedTasks);\n//   };\n\n//   return (\n//     <div className=\"tasks-page\">\n//       <h1 className=\"taskh1\">Tasks Page</h1>\n//       <div className=\"add-task\">\n//         <input\n//           type=\"text\"\n//           value={newTask}\n//           onChange={handleNewTaskChange}\n//           placeholder=\"Enter task\"\n//         />\n//         <button onClick={handleAddTask}>Add Task</button>\n//       </div>\n//       <ul className=\"task-list\">\n//         {tasks.map((task) => (\n//           <li key={task.id} className=\"task-item\">\n//             {task.title}\n//             <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default TasksPage;\n\nimport { useState, useEffect } from 'react';\n\nfunction TasksPage() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [timers, setTimers] = useState({});\n\n  const handleNewTaskChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n  const handleAddTask = () => {\n    if (newTask.trim() !== '') {\n      const newTaskObj = {\n        id: Date.now(),\n        title: newTask,\n        time: 10, // Default time in seconds\n      };\n      setTasks([...tasks, newTaskObj]);\n      setTimers((prevTimers) => ({\n        ...prevTimers,\n        [newTaskObj.id]: newTaskObj.time,\n      }));\n      setNewTask('');\n    }\n  };\n\n  const handleDeleteTask = (taskId) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    const updatedTimers = { ...timers };\n    delete updatedTimers[taskId];\n    setTasks(updatedTasks);\n    setTimers(updatedTimers);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimers((prevTimers) => {\n        const updatedTimers = { ...prevTimers };\n        Object.keys(updatedTimers).forEach((taskId) => {\n          updatedTimers[taskId] -= 1;\n          if (updatedTimers[taskId] === 0) {\n            delete updatedTimers[taskId];\n            // Add your logic here for handling task completion\n          }\n        });\n        return updatedTimers;\n      });\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className=\"tasks-page\">\n      <h1>Tasks Page</h1>\n      <div className=\"add-task\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={handleNewTaskChange}\n          placeholder=\"Enter task\"\n        />\n        <button onClick={handleAddTask}>Add Task</button>\n      </div>\n      <ul className=\"task-list\">\n        {tasks.map((task) => (\n          <li key={task.id} className=\"task-item\">\n            <div>{task.title}</div>\n            <div>{timers[task.id]}s</div>\n            <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TasksPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}