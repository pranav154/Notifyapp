{"ast":null,"code":"var _jsxFileName = \"/Users/pranavreddy/Desktop/notify /user/src/components/TaskPage.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n\n// function TasksPage() {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState('');\n\n//   const handleNewTaskChange = (event) => {\n//     setNewTask(event.target.value);\n//   };\n\n//   const handleAddTask = () => {\n//     if (newTask.trim() !== '') {\n//       const newTaskObj = {\n//         id: Date.now(),\n//         title: newTask,\n//       };\n//       setTasks([...tasks, newTaskObj]);\n//       setNewTask('');\n//     }\n//   };\n\n//   const handleDeleteTask = (taskId) => {\n//     const updatedTasks = tasks.filter((task) => task.id !== taskId);\n//     setTasks(updatedTasks);\n//   };\n\n//   return (\n//     <div className=\"tasks-page\">\n//       <h1 className=\"taskh1\">Tasks Page</h1>\n//       <div className=\"add-task\">\n//         <input\n//           type=\"text\"\n//           value={newTask}\n//           onChange={handleNewTaskChange}\n//           placeholder=\"Enter task\"\n//         />\n//         <button onClick={handleAddTask}>Add Task</button>\n//       </div>\n//       <ul className=\"task-list\">\n//         {tasks.map((task) => (\n//           <li key={task.id} className=\"task-item\">\n//             {task.title}\n//             <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default TasksPage;\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TasksPage() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskTime, setNewTaskTime] = useState('');\n  const [timers, setTimers] = useState({});\n  const handleNewTaskChange = event => {\n    setNewTask(event.target.value);\n  };\n  const handleNewTaskTimeChange = event => {\n    setNewTaskTime(event.target.value);\n  };\n  const handleAddTask = () => {\n    if (newTask.trim() !== '' && newTaskTime !== '') {\n      const [years, months, days, time] = newTaskTime.split('-');\n      const currentDate = new Date();\n      const targetDate = new Date(currentDate.getFullYear() + parseInt(years), currentDate.getMonth() + parseInt(months), currentDate.getDate() + parseInt(days), ...time.split(':').map(val => parseInt(val)));\n      const newTaskObj = {\n        id: Date.now(),\n        title: newTask,\n        targetDate: targetDate.toISOString()\n      };\n      setTasks([...tasks, newTaskObj]);\n      setTimers(prevTimers => ({\n        ...prevTimers,\n        [newTaskObj.id]: targetDate.getTime()\n      }));\n      setNewTask('');\n      setNewTaskTime('');\n    }\n  };\n  const handleDeleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    const updatedTimers = {\n      ...timers\n    };\n    delete updatedTimers[taskId];\n    setTasks(updatedTasks);\n    setTimers(updatedTimers);\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentTime = Date.now();\n      setTimers(prevTimers => {\n        const updatedTimers = {\n          ...prevTimers\n        };\n        Object.keys(updatedTimers).forEach(taskId => {\n          if (currentTime >= updatedTimers[taskId]) {\n            delete updatedTimers[taskId];\n            // Add your logic here for handling task completion\n          }\n        });\n\n        return updatedTimers;\n      });\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: handleNewTaskChange,\n        placeholder: \"Enter task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTaskTime,\n        onChange: handleNewTaskTimeChange,\n        placeholder: \"Set timer (years-months-days-time)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => {\n        const remainingTime = Math.max(0, Math.floor((timers[task.id] - Date.now()) / 1000)) || 0;\n        const days = Math.floor(remainingTime / (3600 * 24));\n        const hours = Math.floor(remainingTime % (3600 * 24) / 3600);\n        const minutes = Math.floor(remainingTime % 3600 / 60);\n        const seconds = remainingTime % 60;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [days, \"d \", hours, \"h \", minutes, \"m \", seconds, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(TasksPage, \"yEedJ1bgEqDStnvB98F1gg8WrI0=\");\n_c = TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TasksPage","_s","tasks","setTasks","newTask","setNewTask","newTaskTime","setNewTaskTime","timers","setTimers","handleNewTaskChange","event","target","value","handleNewTaskTimeChange","handleAddTask","trim","years","months","days","time","split","currentDate","Date","targetDate","getFullYear","parseInt","getMonth","getDate","map","val","newTaskObj","id","now","title","toISOString","prevTimers","getTime","handleDeleteTask","taskId","updatedTasks","filter","task","updatedTimers","interval","setInterval","currentTime","Object","keys","forEach","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","remainingTime","Math","max","floor","hours","minutes","seconds","_c","$RefreshReg$"],"sources":["/Users/pranavreddy/Desktop/notify /user/src/components/TaskPage.jsx"],"sourcesContent":["// import { useState } from 'react';\n\n// function TasksPage() {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState('');\n\n//   const handleNewTaskChange = (event) => {\n//     setNewTask(event.target.value);\n//   };\n\n//   const handleAddTask = () => {\n//     if (newTask.trim() !== '') {\n//       const newTaskObj = {\n//         id: Date.now(),\n//         title: newTask,\n//       };\n//       setTasks([...tasks, newTaskObj]);\n//       setNewTask('');\n//     }\n//   };\n\n//   const handleDeleteTask = (taskId) => {\n//     const updatedTasks = tasks.filter((task) => task.id !== taskId);\n//     setTasks(updatedTasks);\n//   };\n\n//   return (\n//     <div className=\"tasks-page\">\n//       <h1 className=\"taskh1\">Tasks Page</h1>\n//       <div className=\"add-task\">\n//         <input\n//           type=\"text\"\n//           value={newTask}\n//           onChange={handleNewTaskChange}\n//           placeholder=\"Enter task\"\n//         />\n//         <button onClick={handleAddTask}>Add Task</button>\n//       </div>\n//       <ul className=\"task-list\">\n//         {tasks.map((task) => (\n//           <li key={task.id} className=\"task-item\">\n//             {task.title}\n//             <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default TasksPage;\n\nimport { useState, useEffect } from 'react';\n\nfunction TasksPage() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskTime, setNewTaskTime] = useState('');\n  const [timers, setTimers] = useState({});\n\n  const handleNewTaskChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n  const handleNewTaskTimeChange = (event) => {\n    setNewTaskTime(event.target.value);\n  };\n\n  const handleAddTask = () => {\n    if (newTask.trim() !== '' && newTaskTime !== '') {\n      const [years, months, days, time] = newTaskTime.split('-');\n      const currentDate = new Date();\n      const targetDate = new Date(\n        currentDate.getFullYear() + parseInt(years),\n        currentDate.getMonth() + parseInt(months),\n        currentDate.getDate() + parseInt(days),\n        ...time.split(':').map((val) => parseInt(val))\n      );\n\n      const newTaskObj = {\n        id: Date.now(),\n        title: newTask,\n        targetDate: targetDate.toISOString(),\n      };\n      setTasks([...tasks, newTaskObj]);\n      setTimers((prevTimers) => ({\n        ...prevTimers,\n        [newTaskObj.id]: targetDate.getTime(),\n      }));\n      setNewTask('');\n      setNewTaskTime('');\n    }\n  };\n\n  const handleDeleteTask = (taskId) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    const updatedTimers = { ...timers };\n    delete updatedTimers[taskId];\n    setTasks(updatedTasks);\n    setTimers(updatedTimers);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentTime = Date.now();\n      setTimers((prevTimers) => {\n        const updatedTimers = { ...prevTimers };\n        Object.keys(updatedTimers).forEach((taskId) => {\n          if (currentTime >= updatedTimers[taskId]) {\n            delete updatedTimers[taskId];\n            // Add your logic here for handling task completion\n          }\n        });\n        return updatedTimers;\n      });\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className=\"tasks-page\">\n      <h1>Tasks Page</h1>\n      <div className=\"add-task\">\n        <input\n          type=\"text\"\n          value={newTask}\n          onChange={handleNewTaskChange}\n          placeholder=\"Enter task\"\n        />\n        <input\n          type=\"text\"\n          value={newTaskTime}\n          onChange={handleNewTaskTimeChange}\n          placeholder=\"Set timer (years-months-days-time)\"\n        />\n        <button onClick={handleAddTask}>Add Task</button>\n      </div>\n      <ul className=\"task-list\">\n        {tasks.map((task) => {\n          const remainingTime =\n            Math.max(0, Math.floor((timers[task.id] - Date.now()) / 1000)) || 0;\n          const days = Math.floor(remainingTime / (3600 * 24));\n          const hours = Math.floor((remainingTime % (3600 * 24)) / 3600);\n          const minutes = Math.floor((remainingTime % 3600) / 60);\n          const seconds = remainingTime % 60;\n  \n          return (\n            <li key={task.id} className=\"task-item\">\n              <div>{task.title}</div>\n              <div>\n                {days}d {hours}h {minutes}m {seconds}s\n              </div>\n              <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n    }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}